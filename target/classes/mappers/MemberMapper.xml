<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitschool.basic.MemberMapper">
		
	<!-- [개인회원] 로그인 > 사용자가 입력한 "아이디" > 유무 조회 -->
	<select id="selectPersonLogin" parameterType="String" resultType="PersonDTO">
		select * from guser where guserId = #{guserId}
	</select>
	
	<!-- [개인회원] 로그인 페이지에서 ID찾기 (이름,이메일받아와서비교) -->
	<select resultType="PersonDTO" parameterType="String" id="findID">
		select * from guser where guserEmail = #{guserEmail}
	</select>

	<!-- [개인회원] 로그인 페이지에서 PW찾기 (아이디,이메일받아와서비교) -->
	<select resultType="PersonDTO" parameterType="String" id="findPW">
		select * from guser where guserId = #{guserId}
	</select>
	
	
	
	<!-- [개인회원] 회원가입 - 1단계 > 개인정보 등록 + 코드값 -->		
	<insert id="insertPersonData" parameterType="PersonDTO">
		<selectKey keyProperty="guserNo" resultType="int" order="BEFORE">
			select guserSeq.nextval from dual
		</selectKey>
		insert into guser(guserNo, guserId, guserPw, guserName, guserGender, guserPhone, guserEmail, guserCode) 
		values(#{guserNo}, #{guserId}, #{guserPw}, #{guserName}, #{guserGender}, #{guserPhone}, #{guserEmail}, #{guserCode})
	</insert>

	<!-- [개인회원] 회원가입 - 2단계 > 희망지역 3군데 -->
	<insert id="insertPersonArea" parameterType="AreaDTO">
		<selectKey keyProperty="areaNo" resultType="int" order="BEFORE">
			select useareaSeq.nextval from dual
		</selectKey>
		insert into usearea(areaNo, guserId, bigarea1, area, bigarea2, areaP, bigarea3, areaPP) 
		values(#{areaNo}, #{guserId}, #{bigarea1}, #{area}, #{bigarea2}, #{areaP}, #{bigarea3}, #{areaPP}) 
	</insert>
	
	<!-- [개인회원] 회원가입 - 2단계 > 희망 카테고리 3개 -->
	<insert id="insertPersonCategory" parameterType="CategoryDTO">
		<selectKey keyProperty="categoryNo" resultType="int" order="BEFORE">
			select usecategorySeq.nextval from dual
		</selectKey>
		insert into usecategory(categoryNo, guserId, gatherNo, catTopOne, catMidOne, catBotOne, catTopTwo, catMidTwo, catBotTwo, catTopThr, catMidThr, catBotThr) 
		values(#{categoryNo}, #{guserId}, #{gatherNo}, #{catTopOne}, #{catMidOne}, #{catBotOne}, #{catTopTwo}, #{catMidTwo}, #{catBotTwo}, #{catTopThr}, #{catMidThr}, #{catBotThr})
	</insert>

	<!-- [개인회원] 회원가입 - 데이터 유효성 검사 > 아이디 중복 체크 -->
	<select id="selectDuplicatePersonId" parameterType="String" resultType="String">
		select guserId from guser where guserId = #{guserId}
	</select>
	



	<!-- [개인회원] 마이페이지 - 1단계 > 개인정보 수정-->
	<update id="updatePersonInfo" parameterType="PersonDTO">
		update guser set guserName = #{guserName}, guserEmail = #{guserEmail}, guserPhone = #{guserPhone}, guserGender = #{guserGender} 
		where guserId = #{guserId}
	</update>
	
	<!-- [개인회원] 마이페이지 - 2단계 > 희망지역 전체 조회 -->
	<select id="selectPersonHopeArea" parameterType="String" resultType="AreaDTO">
		select * from usearea where guserId = #{guserId}
	</select>
	
	<!-- [개인회원] 마이페이지 - 2단계 > 카테고리 전체 조회 -->
	<select id="selectPersonHopeCategory" parameterType="String" resultType="CategoryDTO">
		select * from usecategory where guserId = #{guserId}
	</select>
	
	<!-- [개인회원] 마이페이지 - 2단계 > 희망지역 수정 -->
	<update id="updatePersonHopeArea" parameterType="AreaDTO">
		update usearea set bigarea1 = #{bigarea1}, area = #{area}, bigarea2 = #{bigarea2}, areaP = #{areaP}, bigarea3 = #{bigarea3}, areaPP = #{areaPP} 
		where guserId = #{guserId}
	</update>
	
	<!-- [개인회원] 마이페이지 - 2단계 > 희망카테고리 수정 -->
	<update id="updatePersonHopeCategory">
		update usecategory set catTopOne = #{catTopOne}, catMidOne = #{catMidOne}, catBotOne = #{catBotOne}, catTopTwo = #{catTopTwo}, 
		catMidTwo = #{catMidTwo}, catBotTwo = #{catBotTwo}, catTopThr = #{catTopThr}, catMidThr = #{catMidThr}, catBotThr = #{catBotThr} 
		where guserId = #{guserId}
	</update>
	
	<!-- [개인회원] 마이페이지 - 비밀번호 변경 > 아이디값 확인 후, 비밀번호 수정 -->
	<update id="updatePersonPw" parameterType="PersonDTO">
      update guser set guserPw = #{guserPw} where guserId = #{guserId}
    </update>	
		
	<!-- [개인회원] 마이페이지 - 회원탈퇴 > 로그인 상태의 아이디, 비밀번호 확인 > DB에서 조회 후, 삭제 -->
	<delete id="deletePerson" parameterType="PersonDTO">
		delete from guser where guserId = #{guserId} and guserPw = #{guserPw}
	</delete>		
	
	<!-- [개인회원] 마이페이지 - 관심모임 삭제  -->
	<delete id="deleteAttend" parameterType="GatherAddonsDTO">
		delete from gatheraddons
		where gatheraddonscode = #{gatherAddonsCode} and gatherno = #{gatherNo} and gatheraddonswriter = #{gatherAddonsWriter} and guserId = #{guserId}
	</delete>



	
	<!-- [기업회원] 회원가입 - 1단계  + 2단계 -->		
	<insert id="insertCompanyRegist" parameterType="CompanyDTO">
		<selectKey keyProperty="comNo" resultType="int" order="BEFORE">
			select companySeq.nextval from dual
		</selectKey>
		insert into company(comNo, comId, comPw, comName, comPhone,  comEmail, comManager, comSaNo, comZoneCode, comRoadAddress, comJibunAddress, comDetailAddress, comCeoName, comCode) 
		values(#{comNo}, #{comId}, #{comPw}, #{comName}, #{comPhone}, #{comEmail}, #{comManager}, #{comSaNo}, #{comZoneCode}, #{comRoadAddress}, #{comJibunAddress}, #{comDetailAddress}, #{comCeoName}, #{comCode})
	</insert>
	
	<!-- [기업회원] 회원가입 - 데이터 유효성 검사 > 아이디 중복 체크 -->
	<select id="selectDuplicateCompanyId" parameterType="String" resultType="String">
		select comId from company where comId = #{comId}
	</select>

	<!-- [기업회원] 로그인 > 사용자가 입력한 "아이디" > 유무 조회 -->
	<select id="selectCompanyLogin" parameterType="String" resultType="CompanyDTO">
		select * from company where comId = #{comId}
	</select>
	
	<!-- [기업회원] 로그인 페이지에서 ID찾기 (이름,이메일받아와서비교) -->
	<select resultType="CompanyDTO" parameterType="String" id="findComId">
		select * from company where comEmail = #{comEmail}
	</select>
	
	<!-- [기업회원] 로그인 페이지에서 비번찾기 (아이디받아와서비교) -->
	<select resultType="CompanyDTO" parameterType="String" id="comfindPW">
		select * from company where comId = #{comId}
	</select>
	
	<!-- [기업회원] 마이페이지 회원정보수정 -->
	<update id="updateCompanyInfo" parameterType="CompanyDTO">
		update company set comName = #{comName}, comPhone = #{comPhone}, comEmail = #{comEmail},comManager = #{comManager},
						   comSaNo = #{comSaNo}, comZoneCode = #{comZoneCode},comRoadAddress = #{comRoadAddress}, comJibunAddress = #{comJibunAddress},
						   comDetailAddress = #{comDetailAddress}, comCeoName = #{comCeoName}
		where comId = #{comId}
	</update>
	
	<!-- [기업회원] 마이페이지 비밀번호 변경 -->	
	<update id="CompanyPwModify" parameterType="CompanyDTO">
		update company set comPw = #{comPw}
		where comId = #{comId}	
	</update>

	<!-- [기업회원] 마이페이지 회원탈퇴 -->	
 	<delete id="CompanyQuit" parameterType="CompanyDTO">
 	delete from company where comId = #{comId} and comPw = #{comPw}
 	</delete>
 	
 	<!-- [관리자]전체개인회원리스트-->	
 	<select resultType="PersonDTO" id="getPerson">
			select * from (select rownum as num, temp.* 
      from (select * from guser order by guserNo desc) temp)
	 where num between 1 and 10
	</select>
	
	<!-- [관리자]전체기업회원리스트-->	
 	<select resultType="CompanyDTO" id="getCompany">
		select * from (select rownum as num, temp.* 
      from (select * from company order by comNo desc) temp)
	 where num between 1 and 10
	</select>
	

	<select id="getGatherList" resultType="GatheringDTO">
		select * from gather
	</select>

	<select id="gatherpacleCnt" resultType="HashMap">
		select
		      (select count(*) from gather) as gathercntAll, 
		      (select count(*) from place) as placecntAll,
		      (select count(*) from gather where gatherrecognition = 'Wait') as gatherRequest
		from dual
	</select>
	
	<select id="gatherInfo" resultType="GatheringDTO" parameterType="String">
		select *
		from gather
		where gatherNo in (select gatherNo from gatherPeople where guserId = #{guserId})
	</select>
	
	<!--  알람인서트(마이페이지-알람)-->
	<insert id="getAlarmInsert" parameterType="AlarmDTO">
		<selectKey keyProperty="alarmNo" resultType="int" order="BEFORE">
			select alarmSeq.nextval from dual
		</selectKey>
		insert into alarm (alarmNo, alarmIndex, alarmId,  alarmDate, alarmRead, alarmGatherNo,alarmGrade, alarmReciveId)
		values (#{alarmNo}, #{alarmIndex},#{alarmId}, sysdate, 'no', #{alarmGatherNo},#{alarmGrade}, #{alarmReciveId}) 
		
	</insert>
	
	<select id="getAlarm" resultType="AlarmDTO" parameterType="String">
		select *
		from alarm	
		where alarmreciveId = #{loginId}
		order by alarmRead, alarmDate desc
	</select>

	<!-- 관리자페이지임 -->
	<select	id="gatherRank" resultType="GatherRankDTO">
		select *
		from ( select gathercategorybot as gathertype, count(*) as typecnt, 'category' as typecode
		       from gather
		       group by gathercategorybot
		       order by typecnt desc, gathercategorybot
		      )
				<!-- <![CDATA[where rownum <=5]]> -->
		union all
		select *
		from ( select gatherarea as gathertype, count(*) as typecnt, 'area' as typecode
		       from gather
		       group by gatherarea
		       order by typecnt desc, gatherarea
		      )
				<!-- <![CDATA[where rownum <=5]]> -->
		union all
		select *
		from ( select gathercategorytop as gathertype, count(*) as typecnt, 'type' as typecode
		       from gather
		       group by gathercategorytop
		       order by typecnt desc, gathercategorytop
		      )
		<!-- <![CDATA[where rownum <=5]]> -->
	</select>
	
	<select id="visitWeek" resultType="VisitorWeekDTO">
		select visitorday, count(*) as dayCount
		from gathervisitor
		group by visitorday
		
	</select>
	
 	<select id="visitTime" resultType="VisitorTimeDTO">
 		select TO_CHAR(visitordate,'HH24') as visitorTime, count(*) as timeCount
		from gathervisitor
		group by TO_CHAR(visitordate,'HH24')
	</select>

	<update id="readCheck" >
		update alarm
		set alarmread = 'yes'
		where alarmno = #{alarmNo}
	</update>
	
	
	<select id="getGatherNoPeople" resultType="GatherPeopleDTO">
 		select *
		from gatherpeople
		where gatherno = #{gatherNo}
	</select>
	
	<insert id="setRecognition" parameterType="AlarmDTO">
		<selectKey keyProperty="alarmNo" resultType="int" order="BEFORE">
			select alarmSeq.nextval from dual
		</selectKey>
		
		insert into alarm (alarmNo, alarmIndex, alarmId,  alarmDate, alarmRead, alarmGatherNo,alarmGrade, alarmReciveId) 
		values (#{alarmNo}, #{alarmIndex}, #{alarmId}, sysdate, 'no', #{alarmGatherNo}, #{alarmGrade}, #{alarmReciveId}) 
	</insert>
</mapper>