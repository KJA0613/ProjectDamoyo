<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitschool.GatheringMapper">
	
	<select id="getherAll" resultType="com.bitschool.dto.GatheringDTO">
		select * 
		from gather 
		order by gatherwrite desc
	</select>
	
	<select id="recommAll" parameterType="String" resultType="com.bitschool.dto.GatheringDTO">
		select b.* 
		from (  select *
		        from (  select * 
		                from RECOMMGATHER 
		                where guserid = #{guserId} 
		                order by RECOMMGATHERCNT desc
		              )
		        <![CDATA[where rownum <= 1]]>) a, GATHER b
		
		 <![CDATA[where rownum <=4]]> and (b.GATHERCATEGORY = a.recommGatherName or b.GATHERAREA = a.recommGatherName)
	</select>
	
	<select id="recommDefault" resultType="com.bitschool.dto.GatheringDTO">
		select * 
		from (  select *
		        from (  select * 
		                from RECOMMGATHER 
		                order by RECOMMGATHERCNT desc
		              )
	   <![CDATA[where rownum <= 1]]>) a, GATHER b
		
		 <![CDATA[where rownum <=4]]> and (b.GATHERCATEGORY = a.recommGatherName or b.GATHERAREA = a.recommGatherName)
	</select>
	
	<select id="getherCheck" parameterType="hashmap" resultType="com.bitschool.dto.GatheringDTO">
		
		select * 
		from gather 
		where 1 = 1
		
		<if test="cList!=null">
			<foreach collection="cList" item="cdata"  open=" and (" close=")" separator="or">
            	gatherCategory like #{cdata}
        	</foreach>
        </if>
        <if test="aList!=null">
 			<foreach collection="aList" item="adata"  open=" and (" close=")" separator="or">
	            gatherarea like #{adata}
	        </foreach>
        </if>
              
        <if test="sSTR!=null">
	       	<if test="sSelect=='제목'"> and gathersubject like '%'||#{sSTR}||'%' </if> 
			<if test="sSelect=='지역'"> and gatherarea like '%'||#{sSTR}||'%' </if> 
			<if test="sSelect=='카테고리'"> and gatherCategory like #{sSTR} </if>
		</if>
		
		order by gatherwrite desc
        
   	</select>
	
	
	<select id="getherOne" parameterType="int" resultType="com.bitschool.dto.GatheringDTO">
		select * from gather where gatherNo = #{gatherNo}
	</select>
	
	<insert id="insertGather" parameterType="hashmap">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
	        select gatherseq.nextval from dual
	    </selectKey>

		insert into gather (gatherno, gathersubject, gatherCategory, gatherwrite, gathersdate, gatheredate, gatherarea, gatherparti, gathercontent, gatherimg, guserid, gatherday, gatherstate)
		values(#{seq}, #{gath.gatherSubject}, #{gath.gatherCategory}, sysdate, to_date( #{gath.gatherSdate},'yyyy-mm-dd'), to_date( #{gath.gatherEdate},'yyyy-mm-dd'), #{gath.gatherArea}, #{gath.gatherParti}, #{gath.gatherContent}, #{gath.gatherImg}, #{gath.guserId}, #{gath.gatherDay}, '모집중')
	
	</insert>
	
	
	<select id="partiList" parameterType="String" resultType="com.bitschool.dto.GatheringDTO" >
	    select * 
		from gather a 
		where exists (select gatherno from gatherparti b where gatherpartiid = #{guserId} and b.gatherparticode = '가입' and a.gatherno = b.gatherno)
	</select>
	
	<select id="makeList" parameterType="String" resultType="com.bitschool.dto.GatheringDTO" >
		select * from gather where guserid = #{guserId}
	</select>
	
	
	<update id="mergeList" parameterType="com.bitschool.dto.RecommGatherDTO">
		
		<selectKey keyProperty="recommgatherNo" resultType="int" order="BEFORE">
	        select recommgatherseq.nextval from dual
	    </selectKey>
	
		merge into recommgather 
			using dual
			on (recommgathername = #{recommgatherName} and recommgathercode = #{recommgatherCode} and guserid = #{guserId})
			when matched then
				update set
					recommgathercnt = recommgathercnt + 1
			when not matched then 
				insert (recommgatherno, recommgathername, recommgathercode, recommgathercnt, guserid, recommgatherdate)
				values (#{recommgatherNo}, #{recommgatherName}, #{recommgatherCode}, 1, #{guserId}, sysdate)
		
	
	</update>
	
	
	<select id="existAddons" resultType="int" parameterType="com.bitschool.dto.GatherAddonsDTO">
		select count(*) 
		from gatheraddons
		where gatheraddonscode = #{gatherAddonsCode} and gatherno = #{gatherNo} and guserId = #{guserId} and gatheraddonswriter = #{gatherAddonsWriter}
	</select>
	
	<insert id="insertAddons" parameterType="com.bitschool.dto.GatherAddonsDTO">
		
		<selectKey keyProperty="gatherAddonsNo" resultType="int" order="BEFORE">
	        select addonsseq.nextval from dual
	    </selectKey>
	
		insert into gatheraddons ( gatheraddonsno, gatheraddonscode, gatherno, gatheraddonswriter, guserid )
		select #{gatherAddonsNo}, #{gatherAddonsCode}, #{gatherNo}, #{gatherAddonsWriter}, #{guserId}
		from dual
		where not exists ( 
				select * 
				from gatheraddons 
				where gatheraddonscode = #{gatherAddonsCode} and gatherno = #{gatherNo} and gatheraddonswriter = #{gatherAddonsWriter} and guserId = #{guserId})
		
	</insert>
	 
	<delete id="deleteAddons" parameterType="com.bitschool.dto.GatherAddonsDTO">
		delete from gatheraddons
		where gatheraddonscode = #{gatherAddonsCode} and gatherno = #{gatherNo} and gatheraddonswriter = #{gatherAddonsWriter} and guserId = #{guserId}
	</delete>
	
	<select id="attendGather" resultType="com.bitschool.dto.GatheringDTO" parameterType="String">
		select *
		from gather a
		where a.gatherno in (select b.gatherno as gatherno  from GATHERADDONS b where b.guserid = #{guserId} and b.gatheraddonscode = '관심')
	</select>

</mapper>
